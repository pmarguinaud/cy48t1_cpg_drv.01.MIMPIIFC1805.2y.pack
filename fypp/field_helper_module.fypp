#:include "field_definition.fypp"

MODULE FIELD_HELPER_MODULE

USE FIELD_MODULE

INTERFACE GET_HOST_DATA_RDONLY
#:for dtype, suffix, rank, default in field_descriptors
#:set field_type_name = 'FIELD_%s%sD' % (suffix, rank)
  MODULE PROCEDURE :: ${field_type_name}$_GET_HOST_DATA_RDONLY
#:endfor
END INTERFACE GET_HOST_DATA_RDONLY

INTERFACE GET_HOST_DATA_WRONLY
#:for dtype, suffix, rank, default in field_descriptors
#:set field_type_name = 'FIELD_%s%sD' % (suffix, rank)
  MODULE PROCEDURE :: ${field_type_name}$_GET_HOST_DATA_WRONLY
#:endfor
END INTERFACE GET_HOST_DATA_WRONLY

INTERFACE GET_HOST_DATA_RDWR
#:for dtype, suffix, rank, default in field_descriptors
#:set field_type_name = 'FIELD_%s%sD' % (suffix, rank)
  MODULE PROCEDURE :: ${field_type_name}$_GET_HOST_DATA_RDWR
#:endfor
END INTERFACE GET_HOST_DATA_RDWR

CONTAINS

#:for dtype, suffix, rank, default in field_descriptors
#:set field_type_name = 'FIELD_%s%sD' % (suffix, rank)
  FUNCTION ${field_type_name}$_GET_HOST_DATA_RDONLY(SELF) RESULT(PTR)
    TYPE(${field_type_name}$), POINTER, INTENT (IN) :: SELF
    ${dtype}$, TARGET, SAVE :: ZDUM (${ ', '.join (['0'] * (rank-1) + ['1']) }$)
    ${dtype}$, POINTER :: PTR(${shapes[rank]}$)

    IF (ASSOCIATED (SELF)) THEN
      PTR (${lbptr (rank)}$) => SELF%PTR
    ELSE
      PTR => ZDUM
    ENDIF

  END FUNCTION ${field_type_name}$_GET_HOST_DATA_RDONLY

  FUNCTION ${field_type_name}$_GET_HOST_DATA_WRONLY(SELF) RESULT(PTR)
    TYPE(${field_type_name}$), POINTER, INTENT (IN) :: SELF
    ${dtype}$, TARGET, SAVE :: ZDUM (${ ', '.join (['0'] * (rank-1) + ['1']) }$)
    ${dtype}$, POINTER :: PTR(${shapes[rank]}$)

    IF (ASSOCIATED (SELF)) THEN
      PTR (${lbptr (rank)}$) => SELF%PTR
    ELSE
      PTR => ZDUM
    ENDIF

  END FUNCTION ${field_type_name}$_GET_HOST_DATA_WRONLY

  FUNCTION ${field_type_name}$_GET_HOST_DATA_RDWR(SELF) RESULT(PTR)
    TYPE(${field_type_name}$), POINTER, INTENT (IN) :: SELF
    ${dtype}$, TARGET, SAVE :: ZDUM (${ ', '.join (['0'] * (rank-1) + ['1']) }$)
    ${dtype}$, POINTER :: PTR(${shapes[rank]}$)

    IF (ASSOCIATED (SELF)) THEN
      PTR (${lbptr (rank)}$) => SELF%PTR
    ELSE
      PTR => ZDUM
    ENDIF

  END FUNCTION ${field_type_name}$_GET_HOST_DATA_RDWR

#:endfor

END MODULE FIELD_HELPER_MODULE
